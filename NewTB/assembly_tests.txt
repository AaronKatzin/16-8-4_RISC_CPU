AdrA: x"0000"

; Test lod immediate
lod r0, #x"0008"; r0 := x"0008"
out r0			; r0 == x"0008";

; Test lod short direct
lod r1, #x"0000"; r1 := x"0000"
lod r0, #x"0008"; r0 := x"0008"
lod r1, r0      ; r1 := r0 := x"0008"
out r1			; r1 == x"0008";

; Test str short direct
lod rC, #x"EEEE"; rC := x"EEEE"
lod r4, #x"0004"; r4 := x"0004"
str r4, rC		; rC := r4 = x"0004"
out rC			; rC == x"0004";

;Test lod/str long direct 
lod r0, #x"EEEE";
lod r8, #x"1234";
str r8, AdrA 	; M1[ AdrA =x"0000" ]:= r8 , r8= x"1234" ,M1[x"0000"]=x"1234"
lod r0, AdrA 	; r0 := M1[x"0000"] = x"1234"
out r0			; r0 == x"1234";

;Test lod/str long direct indexed 
lod r0, #x"EEEE";
lod r8, #x"1234";
lod rC, #x"0004";
str r8, AdrA, rC 	; M1[ AdrA + rC =x"0004" ]:= r8 , r8= x"1234" ,M1[x"0004"]=x"1234", AdrA=x"0000"
lod r0, AdrA, rC 	; r0 := M1[x"0004"] = x"1234"
out r0				; r0 == x"1234";

; Test add immediate
lod r0, #x"0001"	;
add r0, #x"0003"	; r0 := 1+3 := 4
out r0				; r0 == x"0004";

; Test add short direct
lod r0, #x"0002"	;
lod r1, #x"0003"	;
add r0, r1			; r0 := 2+3 := 5
out r0				; r0 == x"0005";

; Test add long direct
lod r0, #x"0002"	;
lod r4, #x"0007"	;
str r4, AdrA 		; M1[x"0000"] := r4 := #x"0007"
add r0, AdrA 		; r0 := 2+7 := 9
out r0				; r0 == x"0009";

; Test add long direct indexed
lod r0, #x"0002"	;
lod r4, #x"0007"	;
lod rC, #x"0004"	;
str r4, AdrA, rC 	; M1[AdrA + rC =x"0004"] := r4 := #x"0007"
add r0, AdrA, rC 	; r0 := 2+7 := 9
out r0				; r0 == x"0009";

; Test bun immediate
lod rC, #x"0001";
bun #Bun_imd 	;
sub rC,rC		; rC:= rC -rC =0, shouldn't be performed @test_skip@
Bun_imd:
inc rC			; rC:= rC + 1; rC should be x"0002" after execution of command 
out rC 			; rC==x"0002"

; Test bun short direct
lod rC, #x"0001";
lod r0, #Bun_short_direct;
bun r0 			;
sub rC,rC		; rC:= rC -rC =0, shouldn't be performed @test_skip@
Bun_short_direct:
inc rC			; rC:= rC + 1; rC should be x"0002" after execution of command 
out rC 			; rC==x"0002"


;Test bun long direct
lod rC, #x"0002";
lod r8, #Bun_long_direct
str r8, AdrA 			; M1[x"0000"] = M1[ AdrA]:= r8 , r8= #Bun_long_direct ,AdrA=x"0000" => M1[4]=#Bun_long_direct
bun AdrA
sub rC,rC				; rC:= rC -rC =0, shouldn't be performed @test_skip@
Bun_long_direct:
inc rC					; rC:= rC + 1; rC should be x"0003" after execution of command 
out rC 					; rC==x"0003"

;Test bun long direct indexed
lod rC, #x"0002";
lod r4, #x"0004";
lod r8, #Bun_long_direct_indexed
str r8, AdrA, r4 		; M1[x"0004"] = M1[ AdrA + x"0004"]:= r8 , r8= #Bun_long_direct_indexed ,AdrA=x"0000" => M1[4]=#Bun_long_direct_indexed
bun AdrA, r4
sub rC,rC				; rC:= rC -rC =0, shouldn't be performed @test_skip@
Bun_long_direct_indexed:
inc rC					; rC:= rC + 1; rC should be x"0003" after execution of command 
out rC 					; rC==x"0003"

; Test bcz short direct - with zero 0
lod rC, #x"0002";
lod r0, #bcz_short_direct_zero_0;
lod r6, #x"FFFF";
shr r6; r6 = x"FFFF" - ZERO FLAG ON
bcz r0
sub rC,rC; rC:= rC -rC =0, should be performed
bcz_short_direct_zero_0:
inc rC; rC:= rC + 1; rC should be x"0001" after execution of command 
out rC ; rC==x"0001"

; Test bcz short direct - with zero 1
lod rC, #x"0002";
lod r0, #bcz_short_direct_zero_1;
lod r6, #x"0001";
shr r6; r6 = x"0000" - ZERO FLAG ON
bcz r0
sub rC,rC; rC:= rC -rC =0, shouldn't be performed @test_skip@
bcz_short_direct_zero_1:
inc rC; rC:= rC + 1; rC should be x"0003" after execution of command 
out rC ; rC==x"0003"

;Test bcz long direct - with zero 0
lod rC, #x"0003";
lod r4, #bcz_long_direct_zero_0;
str r4, AdrA ; M1[x"0000"] := r4 := #bcz_long_direct
lod r6, #x"0002";
shr r6 ; r6 = x"0001" - ZERO FLAG OFF
bcz AdrA
sub rC,rC; rC:= rC -rC =0, should be performed
bcz_long_direct_zero_0:
inc rC; rC:= rC + 1; rC should be x"0001" after execution of command 
out rC ; rC==x"0001"

;Test bcz long direct - with zero 1
lod rC, #x"0003";
lod r4, #bcz_long_direct_zero_1;
str r4, AdrA ; M1[x"0000"] := r4 := #bcz_long_direct
lod r6, #x"0001";
shr r6 ; r6 = x"0000" - ZERO FLAG ON
bcz AdrA
sub rC,rC; rC:= rC -rC =0, shouldn't be performed @test_skip@
bcz_long_direct_zero_1:
inc rC; rC:= rC + 1; rC should be x"0004" after execution of command 
out rC ; rC==x"0004"

;Test bcz long direct indexed - with zero 0
lod rC, #x"0003";
lod r0, #x"0004";
lod r4, #bcz_long_direct_indexed_zero_0;
str r4, AdrA, r0 ; M1[ AdrA + r0 = x"0004"] := r4 := #bcz_long_direct_indexed_zero_0
lod r6, #x"0002";
shr r6 ; r6 = x"0001" - ZERO FLAG OFF
bcz AdrA, r0 
sub rC,rC; rC:= rC -rC =0, should be performed
bcz_long_direct_indexed_zero_0:
inc rC; rC:= rC + 1; rC should be x"0001" after execution of command 
out rC ; rC==x"0001"

;Test bcz long direct indexed - with zero 1
lod rC, #x"0003";
lod r0, #x"0004";
lod r4, #bcz_long_direct_indexed_zero_1;
str r4, AdrA,r0 ; M1[AdrA + r0 = x"0004"] := r4 := #bcz_long_direct_indexed_zero_1
lod r6, #x"0001";
shr r6 ; r6 = x"0000" - ZERO FLAG ON
bcz AdrA, r0
sub rC,rC; rC:= rC -rC =0, shouldn't be performed @test_skip@
bcz_long_direct_indexed_zero_1:
inc rC; rC:= rC + 1; rC should be x"0004" after execution of command 
out rC ; rC==x"0004"